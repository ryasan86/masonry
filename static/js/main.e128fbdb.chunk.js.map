{"version":3,"sources":["images/github.svg","theme.js","constants.js","components/common/Button.js","components/common/Logo.js","components/AppBar.js","components/Card.js","components/Main.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","theme","lightBorder","concat","ROW_HEIGHT","ROW_GAP","GITHUB_REPO_URL","styled","button","_templateObject","wobble","keyframes","Logo_templateObject","Logo","img","_templateObject2","AppBar","render","react_default","a","createElement","StyledAppBar","href","src","GH_LOGO","Component","div","AppBar_templateObject","_ref","Card","state","span","componentDidMount","_this","resizeGridCard","window","addEventListener","imagesLoaded","content","contentHeight","getBoundingClientRect","height","rowSpan","Math","ceil","setState","_this$props$post","props","post","id","imgUrl","StyledCard","ref","el","StyledImg","alt","Card_templateObject","Card_templateObject2","Main","renderPosts","posts","map","i","components_Card","key","StyledMain","Main_templateObject","App","react","components_AppBar","components_Main","APP_WITH_THEME","styled_components_browser_esm","src_App","document","title","ReactDOM","getElementById"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,6uCCEzBC,EAAA,CACbC,YAAW,aAAAC,OAHK,qECAZC,EAAa,GACbC,EAAU,GACVC,EAAkB,sRCATC,IAAOC,OAAVC,saCAZ,IAAMC,EAASC,YAAHC,KAQNC,EAAON,IAAOO,IAAVC,IAKOL,4MCRXM,6MACJC,OAAS,WACP,OACEC,EAAAC,EAAAC,cAACC,EAAD,KACEH,EAAAC,EAAAC,cAAA,uCACAF,EAAAC,EAAAC,cAAA,KAAGE,KAAMhB,GACPY,EAAAC,EAAAC,cAACP,EAAD,CAAMU,IAAKC,sCANAC,aAafJ,EAAed,IAAOmB,IAAVC,IAEN,SAAAC,GAAA,OAAAA,EAAG3B,MAAkBC,cAOlBc,kPCxBTa,6MACJC,MAAQ,CAAEC,KAAM,KAEhBC,kBAAoB,WAClBC,EAAKC,iBACLC,OAAOC,iBAAiB,SAAUH,EAAKC,mBAGzCA,eAAiB,WACfG,IAAaJ,EAAKK,QAAS,WACzB,IAAMC,EAAgBN,EAAKK,QAAQE,wBAAwBC,OACrDC,EAAUC,KAAKC,MAAML,EAAgBlC,IAAYD,EAAaC,IACpE4B,EAAKY,SAAS,CAAEd,KAAMW,SAI1BzB,OAAS,WAAM,IAAA6B,EACoBb,EAAKc,MAA9BC,KAAQC,EADHH,EACGG,GAAIC,EADPJ,EACOI,OAEpB,OACEhC,EAAAC,EAAAC,cAAC+B,EAAD,CAAYpB,KAAME,EAAKH,MAAMC,MAC3Bb,EAAAC,EAAAC,cAAA,OAAKgC,IAAK,SAAAC,GAAE,OAAIpB,EAAKK,QAAUe,IAC7BnC,EAAAC,EAAAC,cAACkC,EAAD,CAAW/B,IAAK2B,EAAQK,IAAKN,oCAtBpBxB,aA6Bb0B,EAAa5C,IAAOmB,IAAV8B,IACO,SAAA5B,GAAA,OAAAA,EAAGG,OAGpBuB,EAAY/C,IAAOO,IAAV2C,KAMA5B,yOCrCT6B,6MACJC,YAAc,WACZ,OAAOC,EAAMC,IAAI,SAACb,EAAMc,GAAP,OAAa5C,EAAAC,EAAAC,cAAC2C,EAAD,CAAMC,IAAKF,EAAGd,KAAMA,SAGpD/B,OAAS,WACP,OAAOC,EAAAC,EAAAC,cAAC6C,EAAD,KAAahC,EAAK0B,6CANVlC,aAUbwC,EAAa1D,IAAOmB,IAAVwC,IAIF7D,EACMD,GAGLsD,ICVAS,mLATX,OACEjD,EAAAC,EAAAC,cAACgD,EAAA,SAAD,KACElD,EAAAC,EAAAC,cAACiD,EAAD,MACAnD,EAAAC,EAAAC,cAACkD,EAAD,cALU7C,aCKZ8C,EACJrD,EAAAC,EAAAC,cAACoD,EAAA,EAAD,CAAevE,MAAOA,GACpBiB,EAAAC,EAAAC,cAACqD,EAAD,OAIJC,SAASC,MAAQ,gBACjBC,IAAS3D,OAAOsD,EAAgBG,SAASG,eAAe","file":"static/js/main.e128fbdb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/github.f5a069d2.svg\";","const lightGray = '#eee';\r\n\r\nexport default {\r\n  lightBorder: `2px solid ${lightGray}`\r\n};\r\n","const ROW_HEIGHT = 40;\r\nconst ROW_GAP = 10;\r\nconst GITHUB_REPO_URL = 'https://github.com/ryasan86/masonry';\r\n\r\nexport { ROW_HEIGHT, ROW_GAP, GITHUB_REPO_URL };\r\n","import styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  border-radius: 3px;\r\n  outline: none;\r\n  width: 6em;\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  padding: 7px;\r\n  font-size: 20px;\r\n`;\r\n\r\nexport { Button };\r\n","import styled, { keyframes } from 'styled-components';\r\n\r\nconst wobble = keyframes`\r\n  0% { transform: rotate(0deg) }\r\n  25% { transform: rotate(-30deg) }\r\n  50% { transform: rotate(30deg) }\r\n  75% { transform: rotate(-30deg) }\r\n  100% { transform: rotate(0deg) }\r\n`;\r\n\r\nconst Logo = styled.img`\r\n  width: 25px;\r\n  height: 25px;\r\n  cursor: pointer;\r\n  &:hover {\r\n    animation: ${wobble} 1s;\r\n  }\r\n`;\r\n\r\nexport { Logo };\r\n","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport { GH_LOGO } from '../images';\r\nimport { GITHUB_REPO_URL } from './../constants';\r\n// components\r\nimport { Logo } from './common';\r\n\r\nclass AppBar extends Component {\r\n  render = () => {\r\n    return (\r\n      <StyledAppBar>\r\n        <p>React Masonry - resize me!</p>\r\n        <a href={GITHUB_REPO_URL}>\r\n          <Logo src={GH_LOGO} />\r\n        </a>\r\n      </StyledAppBar>\r\n    );\r\n  };\r\n}\r\n\r\nconst StyledAppBar = styled.div`\r\n  width: 100%;\r\n  border: ${({ theme }) => theme.lightBorder};\r\n  padding: 10px;\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n`;\r\n\r\nexport default AppBar;\r\n","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport imagesLoaded from 'imagesloaded';\r\nimport { ROW_HEIGHT, ROW_GAP } from './../constants';\r\n\r\nclass Card extends Component {\r\n  state = { span: 0 };\r\n\r\n  componentDidMount = () => {\r\n    this.resizeGridCard();\r\n    window.addEventListener('resize', this.resizeGridCard);\r\n  };\r\n\r\n  resizeGridCard = () => {\r\n    imagesLoaded(this.content, () => {\r\n      const contentHeight = this.content.getBoundingClientRect().height;\r\n      const rowSpan = Math.ceil((contentHeight + ROW_GAP) / (ROW_HEIGHT + ROW_GAP));\r\n      this.setState({ span: rowSpan });\r\n    });\r\n  };\r\n\r\n  render = () => {\r\n    const { post: { id, imgUrl } } = this.props;\r\n\r\n    return (\r\n      <StyledCard span={this.state.span}>\r\n        <div ref={el => this.content = el}>\r\n          <StyledImg src={imgUrl} alt={id} />\r\n        </div>\r\n      </StyledCard>\r\n    );\r\n  };\r\n}\r\n\r\nconst StyledCard = styled.div`\r\n  grid-row-end: span ${({ span }) => span};\r\n`;\r\n\r\nconst StyledImg = styled.img`\r\n  width: 100%;\r\n  border-radius: 10px;\r\n`;\r\n\r\n\r\nexport default Card;\r\n","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport posts from './../data.json';\r\nimport { ROW_GAP, ROW_HEIGHT } from './../constants';\r\n// components\r\nimport Card from './Card';\r\n\r\nclass Main extends Component {\r\n  renderPosts = () => {\r\n    return posts.map((post, i) => <Card key={i} post={post} />);\r\n  };\r\n\r\n  render = () => {\r\n    return <StyledMain>{this.renderPosts()}</StyledMain>;\r\n  };\r\n}\r\n\r\nconst StyledMain = styled.div`\r\n  padding: 2% 4% 2% 4%;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\r\n  grid-gap: ${ROW_GAP}px;\r\n  grid-auto-rows: ${ROW_HEIGHT}px;\r\n`;\r\n\r\nexport default Main;\r\n","import React, { Component, Fragment } from 'react';\nimport AppBar from './components/AppBar';\nimport Main from './components/Main';\n\nclass App extends Component {\n  render() {\n    return (\n      <Fragment>\n        <AppBar />\n        <Main />\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// theme provider\nimport { ThemeProvider } from 'styled-components';\nimport theme from './theme';\n// components\nimport App from './App';\n\nconst APP_WITH_THEME = (\n  <ThemeProvider theme={theme}>\n    <App />\n  </ThemeProvider>\n);\n\ndocument.title = 'React Masonry';\nReactDOM.render(APP_WITH_THEME, document.getElementById('root'));\n"],"sourceRoot":""}