{"version":3,"sources":["images/github.svg","theme.js","constants.js","components/common/Button.js","components/common/Logo.js","components/AppBar.js","components/Card.js","components/Main.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","theme","color","primary","lightGray","darkGray","dark","white","lightBorder","concat","ROW_HEIGHT","ROW_GAP","GITHUB_REPO_URL","styled","button","_templateObject","wobble","keyframes","Logo_templateObject","Logo","img","_templateObject2","StyledAppBar","div","AppBar_templateObject","_ref","AppBar","render","react_default","a","createElement","href","src","GH_LOGO","Component","StyledCard","Card_templateObject","span","StyledContent","Card_templateObject2","StyledImg","_templateObject3","Card","state","componentDidMount","_this","resizeGridCard","window","addEventListener","content","refs","props","post","id","imagesLoaded","contentHeight","getBoundingClientRect","height","rowSpan","Math","ceil","setState","_this$props$post","imgUrl","ref","alt","StyledMain","Main_templateObject","Main","renderPosts","posts","map","i","components_Card","key","App","react","components_AppBar","components_Main","APP_WITH_THEME","styled_components_browser_esm","src_App","document","title","ReactDOM","getElementById"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,6uCCMzBC,EAAA,CACbC,MAAO,CACLC,QARY,UASZC,UARc,OASdC,SARa,UASbC,KARS,UASTC,MARU,QAUZC,YAAW,aAAAC,OAbK,qECDZC,EAAa,GACbC,EAAU,GACVC,EAAkB,sRCATC,IAAOC,OAAVC,saCAZ,IAAMC,EAASC,YAAHC,KAQNC,EAAON,IAAOO,IAAVC,IAKOL,wMCRjB,IAAMM,EAAeT,IAAOU,IAAVC,IAEN,SAAAC,GAAA,OAAAA,EAAGxB,MAAkBO,cAoBlBkB,6MAZbC,OAAS,WACP,OACEC,EAAAC,EAAAC,cAACR,EAAD,KACEM,EAAAC,EAAAC,cAAA,uCACAF,EAAAC,EAAAC,cAAA,KAAGC,KAAMnB,GACPgB,EAAAC,EAAAC,cAACX,EAAD,CAAMa,IAAKC,sCANAC,4TCXrB,IAAMC,EAAatB,IAAOU,IAAVa,IACO,SAAAX,GAAA,OAAAA,EAAGY,OAGpBC,EAAgBzB,IAAOU,IAAVgB,KAEbC,EAAY3B,IAAOO,IAAVqB,KA0CAC,6MApCbC,MAAQ,CACNN,KAAM,KAGRO,kBAAoB,WAClBC,EAAKC,iBACLC,OAAOC,iBAAiB,SAAUH,EAAKC,mBAGzCA,eAAiB,WACf,IAAMG,EAAUJ,EAAKK,KAAL,UAAAzC,OAAoBoC,EAAKM,MAAMC,KAAKC,KACpDC,IAAaL,EAAS,WACpB,IAAMM,EAAgBN,EAAQO,wBAAwBC,OAChDC,EAAUC,KAAKC,MAAML,EAAgB5C,IAAYD,EAAaC,IACpEkC,EAAKgB,SAAS,CAAExB,KAAMqB,SAI1B/B,OAAS,WAAM,IAAAmC,EAGTjB,EAAKM,MADPC,KAAQC,EAFGS,EAEHT,GAAIU,EAFDD,EAECC,OAGd,OACEnC,EAAAC,EAAAC,cAACK,EAAD,CAAYE,KAAMQ,EAAKF,MAAMN,MAC3BT,EAAAC,EAAAC,cAACQ,EAAD,CAAe0B,IAAG,UAAAvD,OAAY4C,IAC5BzB,EAAAC,EAAAC,cAACU,EAAD,CAAWR,IAAK+B,EAAQE,IAAKZ,IAC7BzB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,wEA7BOI,8OCRnB,IAAMgC,EAAarD,IAAOU,IAAV4C,IAIFxD,EACMD,GAaL0D,6MATbC,YAAc,WACZ,OAAOC,EAAMC,IAAI,SAACnB,EAAMoB,GAAP,OAAa5C,EAAAC,EAAAC,cAAC2C,EAAD,CAAMC,IAAKF,EAAGpB,KAAMA,SAGpDzB,OAAS,WACP,OAAOC,EAAAC,EAAAC,cAACoC,EAAD,KAAarB,EAAKwB,6CANVnC,aCDJyC,mLATX,OACE/C,EAAAC,EAAAC,cAAC8C,EAAA,SAAD,KACEhD,EAAAC,EAAAC,cAAC+C,EAAD,MACAjD,EAAAC,EAAAC,cAACgD,EAAD,cALU5C,aCKZ6C,EACJnD,EAAAC,EAAAC,cAACkD,EAAA,EAAD,CAAe/E,MAAOA,GACpB2B,EAAAC,EAAAC,cAACmD,EAAD,OAIJC,SAASC,MAAQ,gBACjBC,IAASzD,OAAOoD,EAAgBG,SAASG,eAAe","file":"static/js/main.005d253c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/github.f5a069d2.svg\";","const primary = '#d7051c';\r\nconst lightGray = '#eee';\r\nconst darkGray = '#8d8d8d';\r\nconst dark = '#1d1d1d';\r\nconst white = '#fff';\r\n\r\nexport default {\r\n  color: {\r\n    primary,\r\n    lightGray,\r\n    darkGray,\r\n    dark,\r\n    white\r\n  },\r\n  lightBorder: `2px solid ${lightGray}`\r\n};\r\n","const ROW_HEIGHT = 40;\r\nconst ROW_GAP = 10;\r\nconst GITHUB_REPO_URL = 'https://github.com/ryasan86/masonry';\r\n\r\nconst sleep = (ms = 0) => new Promise(r => setTimeout(r, ms));\r\n\r\nexport { ROW_HEIGHT, ROW_GAP, GITHUB_REPO_URL, sleep };\r\n","import styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  border-radius: 3px;\r\n  outline: none;\r\n  width: 6em;\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  padding: 7px;\r\n  font-size: 20px;\r\n`;\r\n\r\nexport { Button };\r\n","import styled, { keyframes } from 'styled-components';\r\n\r\nconst wobble = keyframes`\r\n  0% { transform: rotate(0deg) }\r\n  25% { transform: rotate(-30deg) }\r\n  50% { transform: rotate(30deg) }\r\n  75% { transform: rotate(-30deg) }\r\n  100% { transform: rotate(0deg) }\r\n`;\r\n\r\nconst Logo = styled.img`\r\n  width: 50px;\r\n  height: 50px;\r\n  cursor: pointer;\r\n  &:hover {\r\n    animation: ${wobble} 1s;\r\n  }\r\n`;\r\n\r\nexport { Logo };\r\n","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport { GH_LOGO } from '../images';\r\nimport { GITHUB_REPO_URL } from './../constants';\r\n// components\r\nimport { Logo } from './common';\r\n\r\nconst StyledAppBar = styled.div`\r\n  width: 100%;\r\n  border: ${({ theme }) => theme.lightBorder};\r\n  padding: 10px;\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n`;\r\n\r\nclass AppBar extends Component {\r\n  render = () => {\r\n    return (\r\n      <StyledAppBar>\r\n        <p>React Masonry - resize me!</p>\r\n        <a href={GITHUB_REPO_URL}>\r\n          <Logo src={GH_LOGO} />\r\n        </a>\r\n      </StyledAppBar>\r\n    );\r\n  };\r\n}\r\n\r\nexport default AppBar;\r\n","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport imagesLoaded from 'imagesloaded';\r\nimport { ROW_HEIGHT, ROW_GAP } from './../constants';\r\n\r\nconst StyledCard = styled.div`\r\n  grid-row-end: span ${({ span }) => span};\r\n`;\r\n\r\nconst StyledContent = styled.div``;\r\n\r\nconst StyledImg = styled.img`\r\n  width: 100%;\r\n  border-radius: 10px;\r\n`;\r\n\r\nclass Card extends Component {\r\n  state = {\r\n    span: 0\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.resizeGridCard();\r\n    window.addEventListener('resize', this.resizeGridCard);\r\n  };\r\n\r\n  resizeGridCard = () => {\r\n    const content = this.refs[`content${this.props.post.id}`];\r\n    imagesLoaded(content, () => {\r\n      const contentHeight = content.getBoundingClientRect().height;\r\n      const rowSpan = Math.ceil((contentHeight + ROW_GAP) / (ROW_HEIGHT + ROW_GAP));\r\n      this.setState({ span: rowSpan });\r\n    });\r\n  };\r\n\r\n  render = () => {\r\n    const {\r\n      post: { id, imgUrl }\r\n    } = this.props;\r\n\r\n    return (\r\n      <StyledCard span={this.state.span}>\r\n        <StyledContent ref={`content${id}`}>\r\n          <StyledImg src={imgUrl} alt={id} />\r\n          <div>\r\n            <p>Lorem ipsum dolor sit amet</p>\r\n          </div>\r\n        </StyledContent>\r\n      </StyledCard>\r\n    );\r\n  };\r\n}\r\n\r\nexport default Card;\r\n","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport posts from './../data.json';\r\nimport { sleep } from './../constants';\r\nimport { ROW_GAP, ROW_HEIGHT } from './../constants';\r\n// components\r\nimport Card from './Card';\r\n\r\nconst StyledMain = styled.div`\r\n  padding: 2% 4% 2% 4%;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\r\n  grid-gap: ${ROW_GAP}px;\r\n  grid-auto-rows: ${ROW_HEIGHT}px;\r\n`;\r\n\r\nclass Main extends Component {\r\n  renderPosts = () => {\r\n    return posts.map((post, i) => <Card key={i} post={post} />);\r\n  };\r\n\r\n  render = () => {\r\n    return <StyledMain>{this.renderPosts()}</StyledMain>;\r\n  };\r\n}\r\n\r\nexport default Main;\r\n","import React, { Component, Fragment } from 'react';\nimport AppBar from './components/AppBar';\nimport Main from './components/Main';\n\nclass App extends Component {\n  render() {\n    return (\n      <Fragment>\n        <AppBar />\n        <Main />\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// theme provider\nimport { ThemeProvider } from 'styled-components';\nimport theme from './theme';\n// components\nimport App from './App';\n\nconst APP_WITH_THEME = (\n  <ThemeProvider theme={theme}>\n    <App />\n  </ThemeProvider>\n);\n\ndocument.title = 'React Masonry';\nReactDOM.render(APP_WITH_THEME, document.getElementById('root'));\n"],"sourceRoot":""}